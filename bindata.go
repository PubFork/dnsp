package dnsp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _web_ui_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x59\x5f\x6f\xdb\xba\x15\x7f\xcf\xa7\x60\xd5\x0e\x96\xd1\x48\x72\xec\x16\xd7\x73\x6c\x0f\x69\x93\xec\x6e\xcb\xd6\x0b\xb4\xc3\x7d\x18\xf6\x40\x4b\xb4\xc4\x56\x16\x35\x8a\x72\xec\x3b\xe4\xbb\xef\x90\xfa\x47\x49\x94\x9d\xa0\xd8\x6d\x80\xc2\x12\x79\xfe\x9f\xdf\x39\x87\x54\x97\xaf\x02\xe6\x8b\x63\x4a\x50\x24\x76\xf1\xfa\xe2\x62\x29\x7f\x51\x8c\x93\x70\x65\x91\xc4\x5a\xc3\x02\xc1\xc1\xfa\x02\xa1\xe5\x8e\x08\x8c\xfc\x08\xf3\x8c\x88\x95\x95\x8b\xad\x33\xb7\x9a\x8d\x04\xef\xc8\xca\xda\x53\xf2\x98\x32\x2e\x2c\xe4\xb3\x44\x90\x04\x08\x1f\x69\x20\xa2\x55\x40\xf6\xd4\x27\x8e\x7a\xb9\x44\x34\xa1\x82\xe2\xd8\xc9\x7c\x1c\x93\xd5\x95\x3b\x01\x41\x52\x92\xa0\x22\x26\xeb\x20\xc9\x52\xf4\x91\x25\x5b\x1a\xe6\x1c\x0b\xca\x92\xa5\x57\xec\x28\xa2\x98\x26\xdf\x10\x27\xf1\xca\xca\xc4\x31\x26\x59\x44\x08\xe8\x8b\x38\xd9\xae\xac\x48\x88\x74\xe1\x79\xc7\x9c\xba\x47\x1c\x31\x86\x53\x9a\xb9\x3e\xdb\x79\x69\xce\x89\x37\x71\xdf\xbb\x13\xf5\xe8\xec\x68\xe2\xfa\x59\x56\x38\xf0\xbd\x12\x43\x4e\x83\xcc\xe1\x24\x4b\x59\x92\xd1\xbd\x2e\x5d\x8a\x57\x42\xa5\x22\x84\x36\x2c\x38\xa2\xff\xaa\x47\x78\xc1\xfe\xb7\x90\xb3\x3c\x09\x1c\x9f\xc5\x8c\x2f\xd0\xeb\xdb\xf7\xb7\x7f\xbc\x9b\x5d\x97\x04\xd5\xea\x74\x3e\x9b\xbc\xfb\xa9\x58\x7d\xba\x50\x3f\x6e\xcc\x42\x56\x4b\x8a\x08\x0d\x23\xb1\x40\x57\x3f\xbd\x4b\x0f\x15\xb7\x8a\x35\xac\x4d\x26\x7f\xb8\xee\x69\x5c\xa0\x9c\xc7\xb6\x27\xa5\xb8\x69\x12\x8e\x91\x0f\xc9\x22\x1c\x25\x0c\xfc\x48\x09\x16\x6d\x6d\x65\x36\x6b\x85\x3b\xcc\x43\x9a\x2c\xd0\x04\xe1\x5c\xb0\x36\xed\x26\x06\x2d\x31\xcd\xc4\x25\x72\x1f\x23\x2a\x88\x7c\x6e\x9c\x66\x3c\x20\xdc\xe1\x38\xa0\x79\xb6\x40\xf3\xc6\xde\x4a\xe6\xd5\xa4\x59\x4b\x71\x10\xd0\x24\x74\x36\x4c\x08\xb6\xeb\xec\xb1\x8c\x4a\x70\x2c\x64\xea\x00\x26\x7b\x52\xd9\xd1\x36\xe3\x54\xbc\xdb\x91\x55\x7c\x06\x93\xfb\x7c\x77\xf3\xbb\x9b\xfb\xc9\x80\xbe\x68\xda\xf2\x3c\x9a\xf6\xc3\xd6\xf1\x4f\x77\xcc\x20\xae\xe6\x3f\xa1\x9e\xed\x09\x8f\x71\x03\xae\x26\x3a\x78\x93\xb1\x38\x17\xa4\xd2\xf9\x9b\x43\x93\x80\x1c\xa4\xce\x6a\x29\x26\x5b\xa1\x59\x25\x58\xaa\xbd\xd5\xe0\xd2\x80\x74\x12\x5b\x75\x94\x08\xa9\x95\xb2\x14\xfb\x54\x1c\x41\xac\x3b\xbf\x3e\x03\x85\x1a\xe2\xe0\xbd\x23\x45\xa6\x1d\xf4\x2c\xd0\x34\x3d\x20\xf0\x8a\x06\xed\x14\x9a\x41\xf4\xd2\xfc\x3d\x53\xb1\x41\x86\xc6\x18\xcd\x9e\x8b\xbb\x26\xad\xf7\xf3\xfb\x9b\xfb\xfb\xb6\x2b\x4e\x3b\x19\x35\x60\xde\x37\xfe\x09\x72\x10\x0e\x8e\x69\x08\x7e\x17\x65\xdc\x8e\x63\xc4\xc0\x2a\x1f\xf4\x37\x90\x1e\x62\x41\x68\x0b\x95\xee\x3c\x96\x29\xdf\xb0\x38\xe8\x98\xd3\xaf\xc4\x27\x4d\x0b\xde\xb5\xd4\x28\x61\x19\xfd\x8d\x2c\xd0\x8c\xec\xba\xee\xde\xcc\xe6\xef\xdf\x7d\x38\x5f\xea\x95\x1f\x25\xc1\x96\xf1\x5d\x03\xf3\x2a\x1e\xd0\x89\x2b\x0d\x4f\x7d\x72\x9a\xa4\xb9\xf8\x97\x1c\x74\x2b\x4b\xfa\x6e\xfd\xbb\x96\x50\x41\x79\xde\x18\x58\x23\xde\x7d\xd7\x2c\x6a\x9a\x34\x5f\xce\x45\x05\x98\x9c\x4d\x0e\x9b\x49\xb7\x88\x55\x83\x38\x01\x51\x53\xd3\x57\x31\x56\x18\xcd\xe3\x5a\x9e\x02\x9d\x9a\x31\x8e\x74\x70\x01\x3d\x3c\x21\x7d\xab\xbb\x15\x32\xe9\x67\xaf\x92\x1c\x53\x53\x7c\x21\x40\x7a\x94\x8d\x46\xeb\x08\xae\x8c\x0e\x48\x4c\x04\xe9\x46\x61\x1b\x33\x0c\x21\xe6\x32\xd2\x9d\x60\xf2\xaa\xdf\x34\x10\x1f\xea\xd7\x4b\xaf\x1c\xae\x6a\xce\xfa\x9c\xa6\x02\x65\xdc\x2f\xc6\x76\x06\x73\x1b\x7f\xc5\x07\x37\x64\x2c\x8c\x49\x3d\xb9\xe5\x9a\x17\xd3\x4d\xe6\x7d\xfd\x4f\x4e\xf8\xd1\x9b\xba\x57\xee\xac\x7c\x71\xe5\xec\xfe\x0a\xa3\x1b\x44\x2b\x79\xeb\x46\x74\x31\xc3\xdf\xd8\x70\x66\xca\x77\x50\x35\x63\x97\xc3\xe1\xe8\x68\x6f\xf3\xc4\x97\xbd\xd6\x1e\xd7\xee\xed\x31\x47\x70\x4e\xfa\x3b\x0b\x08\x5a\xa1\x9a\x60\x07\xef\x0d\x91\x04\x5f\x12\xb0\x47\x77\x57\x90\xc9\x9f\xca\xe3\x32\x7a\x85\x24\x9a\x7d\xa8\xbb\x93\x26\x4d\x97\xc4\x89\xc8\x79\xd2\x16\xb8\x42\x96\xea\x6a\x56\x4f\xa8\xe7\xa1\x5b\xb2\xc5\x79\x2c\xa0\xd9\xa3\xba\xf5\x95\xbb\xa5\xe1\x76\xc9\x3d\xbe\xd6\xd8\xfe\x4c\x80\x25\x22\xca\x56\x84\x93\x40\x12\x23\xe8\x77\x72\x2d\xc5\x21\x29\x29\xdf\xb8\x21\x11\x7f\xfd\xfc\xe9\x1f\xb6\xe5\x49\x52\xeb\xb2\x31\x3b\xc0\x02\xeb\xa6\x57\xea\xd4\x7a\xad\x0b\x21\xba\x45\xf6\x2b\xcd\x75\x7b\xac\x73\xc9\x44\x58\xda\x98\xad\x26\xa0\x35\x76\x23\x0a\xd2\xc6\xd7\x1d\x52\xad\xc1\x37\xa4\x59\xc4\x1e\x75\xd2\xa7\x2a\x52\x8d\x21\x32\x01\x50\x05\x3f\x43\x85\x7c\x61\x0f\x9d\x14\xc8\xba\xd1\xad\x92\xc4\x31\xf3\xd5\xa9\x15\xe8\x5a\xd6\xa3\x3f\xa1\x51\x63\xc5\x08\x2d\xe0\xb5\xb6\x7f\xa4\x39\xfe\xc6\xae\x45\xbc\x45\x16\x54\x24\x18\x8a\xd3\x94\x24\x81\x3d\x82\xc3\xea\x7a\x99\xa5\x38\x41\x7e\x8c\xb3\x0c\x0e\xe2\x3c\xb6\xd6\x23\xf4\x56\xf3\x56\x1a\x05\x9c\x23\x80\x30\x10\xae\x97\xb8\x3c\xcb\x7e\xc5\x7b\x5c\x20\x79\x01\xf8\x0e\xe8\xbe\x92\xd1\x2a\x51\x6b\x7d\x58\x7a\xb0\x09\x15\x80\xe1\x1f\xe8\x1b\x8d\x7b\x00\x52\xe3\xe4\x16\x24\x9c\x86\x23\xc4\xfd\x75\x4a\x78\xc6\x12\x38\xed\x5b\x60\x93\xdd\x8b\x88\x0a\x88\x0a\x86\x8a\xc5\x68\x2c\x7d\x2e\xc6\x95\xd5\xd7\x2b\xe3\x9b\xa7\x80\x14\xf2\x51\x4d\x1a\x4d\xbd\x62\xd1\x6d\xa8\x6c\xb4\xc7\xae\xec\xf9\x25\x81\xb9\xc0\x12\x9f\x13\x59\xd2\x3d\xa9\xdd\xe4\xfa\x39\xe7\x44\x91\xa4\xf2\x26\xf4\x97\xa4\x94\xab\xe9\x19\x6b\x78\xea\xd9\x50\xb2\xbf\x45\x57\x66\x4b\x02\xf2\x3b\x5b\xe2\x98\x2c\xd1\xcb\xb7\x46\x2c\x5c\x79\x36\x31\xf5\x4f\x95\xb2\x2c\x59\xb9\x86\x5e\xad\x10\xcc\x05\xb2\xa5\x09\x09\x7a\x55\xfb\xba\x10\xe4\x28\xc9\x55\xaa\x0b\xab\xca\x1e\x70\xa2\x1c\x65\x29\x37\x53\x15\xf8\x7c\x10\xf5\xcd\xd4\x83\xab\xd4\xc2\xe8\x87\x20\xbd\xb1\x45\x44\xb3\xb1\x0b\xc1\x02\xb7\x21\x0a\x60\x1b\xd4\x93\x0b\xf5\xe3\x28\x9a\x91\xa6\x57\xc1\x8c\xc7\xb2\x82\xe5\x96\xbb\xc7\xb1\xdd\x6d\x4d\x72\x1f\xdc\xb4\xac\x8e\x7f\xae\x9c\x2f\xb6\xbe\x24\xff\x80\x1a\x20\xee\xa9\x38\x42\xb5\xca\xf7\xcb\x0e\x49\x31\xbd\x47\xbf\xfc\xf3\xcb\xa8\xbb\x95\xe5\xbe\x4f\x32\x38\x24\x0f\x46\xbe\xfa\x6b\x75\x2a\x69\x63\xab\x0f\x96\xd6\xb7\xd0\x6e\x1b\x29\x2a\xaf\x2d\xab\xb7\xfd\xa4\xbd\x3f\x9d\x4b\x56\x2b\xc0\xee\x37\x72\x4c\xe1\x9e\x9c\xd5\xe9\x42\x36\xe9\xe2\x87\xc8\xa6\xe8\x47\x72\x7c\x5d\xcd\xba\xd8\x31\xe5\xd0\x88\x87\xf3\x76\xd5\x47\x1e\xb0\x0b\x02\x3a\x52\x7c\xa3\x4b\x68\xca\xad\x76\x38\xba\x1c\x2e\xc1\x90\xc3\x04\x2c\x8c\x31\x21\xac\x7a\x30\xe1\x4a\x63\xd5\x90\x38\xaa\x0a\xf7\x77\xc2\xda\xed\xdd\xc3\xdd\x97\xbb\xef\x80\x9b\xee\x06\x60\x0a\x06\xab\x09\x4e\xed\xa6\xd6\xa7\x78\x0e\xa2\x9a\xdf\xe6\x64\xb6\xf4\x8a\xaf\x53\x17\x4b\xf9\x61\x45\x9d\xd4\xb4\xa9\x26\x3f\x6e\x14\x1f\x78\xd4\x38\xbb\xe8\x6c\x97\xdf\x34\xac\xe2\x54\xa7\xef\xa8\x2f\x44\x61\xb9\x61\xd8\xca\x9d\x2b\x54\x3e\xec\x02\x67\xea\xcc\x8a\x0f\x3d\x7d\xea\xba\x75\xd6\xb2\x14\x45\x34\x5d\xd7\x43\x10\x5c\x98\x6a\xdc\x03\x86\xb4\xe2\x75\xc6\x9e\x2b\x67\xda\xe5\xe8\xc4\xa5\xbe\xa5\xb6\xcc\xaa\x8c\x9b\xad\x7f\x29\x27\x36\xd8\x36\x33\x50\x18\x45\x39\xed\x70\x0e\xb3\x34\xb7\x51\x23\x69\x49\x4c\x03\xf0\xad\x3a\x38\xe8\x73\xa2\x25\xa6\xb8\x6e\x5a\xeb\x49\x99\x61\x93\xb8\x9f\x3f\x7d\xfe\xf2\x19\x7d\x78\xf8\xf4\xf1\x6f\x77\xb7\x26\xdb\xcc\xac\x43\xcb\x11\xef\xc5\xd6\xe0\x5f\x2f\xe7\x26\x4a\xed\x82\x3a\x14\x8a\x62\x78\x69\xf7\x56\xed\xd4\x57\x34\x55\x0b\xa5\x10\x1d\x12\xc1\x4d\x9d\xf0\x95\x75\x38\x1c\xe4\x1d\x67\x48\x5e\x79\x09\x6b\x0c\xa8\xae\x65\x0a\x3e\xd5\xf9\xef\x26\x08\x96\x5e\xf1\x62\xf4\x61\x28\xd8\xcb\x3c\x36\xd3\x9b\xd6\x9b\xa2\x3c\x23\xdb\x44\xf8\xff\x2f\x01\x75\x42\xf9\xd1\x05\xd0\x3f\x26\xfd\x50\xf8\x1b\x33\xd1\x25\xec\x2f\x68\xbe\x57\x17\x2f\xa4\xae\xed\x70\xf1\xa0\x19\xc0\xf7\xb8\x90\x9f\x2c\xe4\x95\xbb\xc5\xda\x7a\x6d\xeb\x3e\x9b\xff\xc1\x96\x5c\x5f\xb8\x7a\x2d\xf9\xd7\x6a\xe7\x64\x4b\x1e\x44\xce\xe9\xc6\xf9\x42\xcc\x3c\x1b\x2f\xfd\x66\xa9\x1c\x2c\xe9\x5f\x02\x96\x02\x28\x37\x0f\x0f\x9f\x7e\xed\x01\x65\xb8\x2a\xdb\x11\xe8\xf6\xc6\xe7\xf5\xc5\xe7\xf7\xc4\x97\xf7\xc3\x90\xb1\x60\xa0\x21\x7e\x7f\x33\x34\x17\x49\xbf\xd9\xf5\x1b\xe0\x50\xd5\x9c\x29\x9b\x81\x0a\xb9\xe8\x09\xad\x1f\xcb\x87\xfa\xa7\x38\x27\x01\x3e\xd5\x7f\xf7\xfd\x2f\x00\x00\xff\xff\x4b\x7b\x84\xaa\xff\x1b\x00\x00")

func web_ui_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_web_ui_index_html,
		"web-ui/index.html",
	)
}

func web_ui_index_html() (*asset, error) {
	bytes, err := web_ui_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "web-ui/index.html", size: 7167, mode: os.FileMode(420), modTime: time.Unix(1422231798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _web_ui_logo_png = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x56\x09\x50\x53\x69\x97\x4d\x02\xb2\xc9\xa6\x02\x46\xa2\x80\x2c\x01\x24\x81\x04\x12\x40\x20\x64\x21\x10\x09\x26\x12\x20\x80\xa0\xf8\x88\x02\x12\x40\xa5\x05\x01\x91\x36\x61\x15\xc5\x1e\x59\x14\x41\xf6\x45\x76\xd9\x51\x1b\x64\x92\x9f\x91\x1d\x04\x91\x45\xba\x21\xb8\x22\xb2\x0a\xc4\xc6\x8d\xcc\xf3\xaf\xea\x99\x9a\xae\x9a\xaa\x57\xf7\x3b\xf7\xbc\x7b\x6f\x9d\x7a\xe7\x55\xdd\x2f\xd5\x95\x49\x53\x52\xd0\x54\x80\x40\x20\x4a\xce\x47\xa8\x6e\x10\x08\x14\x03\xe2\x07\x72\x52\x60\x4c\xb6\x2f\x76\x02\x0f\xe9\x20\x32\x83\x0c\x81\x34\xfe\xc7\xce\xef\xfe\x3b\xc0\x1c\x7a\xd1\x8d\x46\x81\x3c\x18\xde\xbf\x00\x81\xc0\x34\x5c\x8f\x7a\x38\x82\xa4\xbe\x5d\x50\x69\x3c\xcd\xd9\x3f\xe5\xb0\x2d\x11\xc9\xae\x06\x5c\x8f\x48\x78\xb0\x92\x44\x3a\x44\x22\x61\xf0\x24\x0e\xec\x98\x92\x44\x97\x92\x24\x7a\x69\x12\x3d\x39\xcc\x2e\xe0\x74\x44\xc6\x05\xac\x51\xd8\x27\x37\x37\x88\x3a\x4f\x22\x91\x78\xe9\xb9\x16\x15\x45\x5b\x14\xf2\x69\x60\x81\x89\xf9\x11\xb0\x92\x72\xfa\x21\xd8\x5e\x9a\xe8\x62\x60\xce\x00\x53\x3d\x2c\xdd\x04\xcf\x44\xdb\xfa\xe8\x59\x7a\x16\x27\x38\xe7\xf3\x9d\x4a\xf8\x4e\xa5\x49\x2e\xc1\x3e\x3e\x26\x96\xc7\x90\xc4\x8b\x18\x3c\x11\x89\xa5\x1f\xc2\xda\x3b\xd1\x3d\x51\x36\xc7\xf5\x71\x6e\x60\xd9\x21\x2c\x41\xd7\x9c\x59\x9a\x48\x37\xb3\x62\xfc\x8c\x44\x2e\x85\xea\x86\xc6\x39\x1a\x72\xde\x85\x85\xdd\x05\x99\xdc\x58\x07\x3d\xec\x4f\x61\x24\xd7\x28\x24\x08\x12\xc1\x09\x44\x12\xd1\xd1\xda\xf5\xa6\x31\xd6\xc9\xd4\xbf\xe5\x10\x96\x06\x92\x06\x78\xb6\x1f\x9b\x0a\x0e\x34\x20\x84\xe0\x6c\x68\x25\xf1\xb4\xd2\x9f\xda\x7e\x3e\x96\x04\x96\xbe\xed\x69\x26\x9d\x6e\x67\x47\xc2\x51\xb9\x61\xfe\x24\x9c\x2d\x93\x42\x3d\x8a\x26\xf8\xe3\xed\xdc\xc0\x5e\x70\x38\xd6\xa7\xe3\x10\x35\x06\x49\xbd\xec\xed\x4a\x47\x99\x13\x6f\xf1\xe6\x40\xe5\x20\x9f\xfb\x2b\x05\x8c\x68\x2b\x96\x0d\xd1\x93\x40\x20\x61\xad\x8f\xa2\xad\xd9\xa6\x78\x27\xa4\x7d\xb8\xbf\xbf\x3f\xc6\xca\x11\x6f\x4d\xc2\x53\x43\xbd\x58\x0e\xe6\x56\x14\x23\xfa\x2d\x13\x7a\xb2\x9e\xf5\x49\x23\x2c\xdd\xd4\xee\x54\x41\x02\x4d\xcf\xca\xc7\xc8\x3e\x14\xc5\x4a\x37\xc5\xd9\x83\xda\x4a\x12\x9d\x8b\xe2\x1d\x4b\x93\x9c\x29\xec\x44\x2a\xdd\xd7\xc7\x87\x67\x48\x4f\xf9\x29\x32\x89\xee\xc1\x62\x18\x5b\x79\xda\xd3\xcf\xdb\xd8\x51\x2c\xed\x7d\x8c\xb1\x74\x50\x98\x31\x8e\xa9\x8b\x75\xd9\xcf\xae\x46\x5a\x9f\x30\xc6\xb1\xc0\x4a\x63\x2c\xf8\xc5\x1c\xfe\x6d\x93\x0b\xd6\x92\x78\x98\xfd\x5b\x41\x12\xcd\xcc\xda\x15\x8d\x73\x01\x8d\xc0\x5a\x12\xec\xed\xa9\x0e\xac\x10\x4b\x1b\x7b\x0c\x9e\x8a\xa6\x46\x9a\xe1\x49\x46\x18\xd0\x32\x17\x23\x8c\x83\x01\x86\x86\xc4\xd0\x8c\x30\x8e\x46\x18\xa2\xde\x4f\x40\x41\xc4\x77\xed\x07\xff\x8c\xaa\x08\x37\xa6\x3b\x84\x6b\xa6\x1e\x89\xd0\x81\x0d\x43\x61\x88\x47\x9d\xdb\x3b\x77\xca\xca\x42\xa5\xa1\x3a\xd2\x46\x6f\x47\xb6\x14\x2f\xfe\x18\x19\x5b\x6d\x8e\xbc\xef\xbd\x1f\xb5\xb4\xeb\x3e\xa3\x79\x75\x15\xc7\x13\x92\x44\x23\x6b\x39\xcf\x18\x76\x42\x25\xd9\x34\x15\x91\x50\x47\x14\x24\x62\xe8\xac\xaa\x8b\x2a\x9b\x11\x76\x00\x4f\xf7\xce\x64\x0b\x10\x89\xe6\x52\xd5\x23\xa9\x00\x37\xbe\x7b\x97\x1d\x55\x67\x44\xba\x9e\xa3\x26\xce\x61\x00\x69\x69\xcd\x9e\xea\x39\x69\x76\xc8\x1c\x34\x3a\x4d\xc4\x45\xe6\x78\x22\x85\x4e\xc7\x34\xd2\x11\xe8\x5d\x38\xf7\x38\x90\xe5\x7a\x8a\xc2\x84\x22\x44\x9a\xb0\x68\x75\x55\x34\x73\x1f\x61\x9e\x26\x1c\xba\xef\x89\xe4\x35\xdb\x37\xa7\x1e\x98\xca\x82\x40\xe4\x3c\x9d\xa9\x64\x8f\xe8\xe9\xe5\xbc\xbf\x4e\xed\x71\x86\x77\xcf\x4b\xb3\xae\xeb\xab\x1e\x54\xbd\x2e\xe7\x46\x90\x8b\xe7\xe9\x68\x5c\x87\x5d\x57\x98\x42\x54\x1e\x69\x14\xbd\x8c\x35\x0b\xaa\x8f\x2a\xf0\xab\xd7\x8e\x32\x60\x6d\x77\xe9\x69\xe2\xfa\x98\x31\x41\x51\x96\x7d\x71\x57\x0a\xb5\x73\x02\xd6\x57\xac\x9a\x33\xa3\x66\x63\x02\xe5\xc9\xc5\xae\x46\x6a\x0a\x49\x94\xff\xe7\x90\x98\xbc\x7b\x58\xae\x39\x9e\x7c\xe2\xee\x74\x2d\xeb\x6d\x61\x12\xe0\xfd\xf5\xba\xcc\x12\x1a\xe6\x00\xc8\x29\xf2\x0f\x62\xa4\x93\x29\x7f\x03\x81\x2a\xfc\x6f\x56\xed\x7f\x5f\xff\x0f\x5b\xac\x0a\x3f\x65\x0c\x7d\x29\x8f\x0a\xa9\x96\xa0\x32\x85\x37\xdf\x1a\xb6\xb4\xb6\x96\x23\xad\xdd\x5f\x43\xd9\xdb\x6d\xa5\x5a\xa7\x54\x9d\x8e\x8d\x1f\xac\xb8\x0c\x7c\x71\xa9\xae\x4e\xf0\x34\x7e\x96\x9c\x72\xae\xef\x83\xb2\xbd\xfc\x8f\xcd\x82\xee\x1e\xf9\xe3\x77\x56\xac\x4e\x3b\x05\xd3\x84\x73\x00\xb9\x67\x66\x5d\xf1\x8b\x64\xfb\x5d\xe5\xb3\x39\xc9\xf4\xab\x2c\xa9\x3b\xa4\xd1\xfc\x63\x75\x39\x7b\x75\x89\xc2\x31\xc5\x9b\xe7\xc4\x52\xda\x68\xd8\x50\x73\x5f\xb0\xf2\x9d\xf6\x95\xf7\xa4\xe2\x6d\xe7\x24\xa9\x1f\x93\xd9\x03\xdf\x25\x19\x5c\xae\x9d\xcf\xc0\xc3\xdd\x02\xb7\xb3\x56\x6c\x0b\x02\xa9\xba\xb2\xa0\x63\x86\x47\xce\xe8\xb8\xc1\x1c\x58\x6b\x4d\xae\xbe\xfa\x1b\x2b\x60\xec\xe6\x9b\x04\xf5\xdf\xc9\x31\x66\x93\xfc\xf0\x70\x98\xcd\x7b\x19\x29\x97\x82\xa2\x13\x2d\x92\xd3\x63\x52\xef\x7f\x9c\xdb\xe5\x18\x95\x93\x62\xb2\x14\xa2\xc4\xce\x4c\xbf\x56\xb0\xd1\xd8\xd7\xb8\xc4\x63\x4e\x6a\x4f\xea\x3c\xfa\xec\x71\xb1\xf4\x53\x2c\x1a\x5a\xa3\xd2\x32\xf8\x76\x66\x43\x66\xbb\xcb\xba\x18\x1a\x31\x88\xd1\x1e\x0e\x84\xb5\xdf\xab\x69\xbe\xed\x69\xfa\xb6\xd5\x15\x3e\x24\x53\x23\xf8\xbc\xfe\xed\x6a\x57\xea\x4a\xac\x52\x25\x9b\x04\xfc\x96\x6d\xe3\x15\xb3\xc3\xd4\xde\xec\x08\xd5\xab\xef\xb2\x89\xe0\x73\xea\xd7\xa0\x3d\xf7\x2a\xf8\xe3\x19\x3b\xa0\x13\x56\x45\x37\x5a\x7e\xc9\xeb\x09\xd9\x65\x74\xf7\x6a\x08\x1a\xd2\xae\xbb\x22\x69\x89\xf4\x73\x7f\xe5\x71\x9d\x7f\x7b\xfe\x23\xe7\x47\xd6\xe9\xdb\x7b\x4d\x28\x23\x65\xc4\xd7\x52\x11\xe2\x6b\x9a\x33\xb0\x3e\x5e\xdb\x35\xde\x3b\x8f\x0f\xaa\xec\xef\xfd\xaf\x5b\x3d\x9b\x0f\xdc\x9d\x97\x75\x3d\xf5\xe4\x7e\xa0\xd7\xb0\x6a\x29\xb4\x26\xb6\xae\xcb\x43\x08\x3f\x9d\x8d\xfb\xc6\x87\x8e\x07\xa7\x9d\xab\x3a\xb3\xf7\xd7\x14\xa3\xba\xde\xb1\xe2\xfe\x27\xe4\x37\xe2\x9b\x1a\x44\x41\x8b\x7b\xf2\xda\xb4\x41\x0c\x5b\xc1\x30\x4e\x3e\xac\x6c\xcd\xe7\xe3\x0d\x43\xc0\x4b\xaf\xeb\x1b\x33\x63\xf2\x52\xc9\xee\xbb\xb3\xfe\xd2\x6d\xde\x20\xf5\x4a\x25\xeb\x4a\xf4\x13\x2a\xba\x41\x2a\x2e\xbd\x63\xf8\x6c\xf8\x8e\xa3\xb6\xfb\x67\x8f\xdf\xff\x73\x4b\x1b\x79\x9d\xbf\xe0\x90\x7e\x23\xe5\x4b\xb8\x4c\xad\xcc\xe6\x9e\x05\xe2\xf3\xbc\xdc\x0b\x8b\x67\x96\xbf\xac\x11\x45\x86\xfd\xfc\x85\x1d\xd5\xb2\x77\x39\xc0\xae\x67\xfa\xf8\x20\x71\xd9\xaf\x5a\xfc\x62\x03\xc5\x7e\x98\x96\x72\xe8\xbe\xc5\x6c\xf3\x2b\xd7\xea\xe6\x76\x88\xc6\xbc\x9b\xda\xdb\xa6\x2a\x34\xbc\xbd\x3e\x09\x39\xb3\x36\x57\x2b\x2e\x28\xc4\x76\x19\x35\x45\xa7\xaa\x03\x0f\xf0\x69\xc9\xcf\x47\xb6\xfd\x1a\xa4\xfe\x8a\xae\x20\xbf\xcd\xde\xf2\x80\x6e\x9c\xe7\x2a\x79\xee\xca\xc9\xce\x53\x15\xe3\xf7\x1d\xb7\x75\xf1\x23\x1d\x44\x2b\xa5\x9d\x19\x2c\xb6\xc2\xf1\x3d\x0f\x10\x5e\xb5\x96\x8b\xb9\xbc\x24\x94\xc6\x7c\x13\xf2\xd9\x65\x16\xb6\xa9\xfb\x5a\x80\x59\x39\xf3\xa0\x52\x1a\xca\xac\xe4\xe1\x8b\x24\xea\x90\xa6\x4d\x6a\x72\x68\x18\x05\xda\x40\xbb\x35\xf0\x2f\x19\xd5\xe5\x92\xa8\x16\x4e\xc1\xaa\x19\x67\x1f\xdc\x78\x40\x3d\xa0\xfe\x1b\x8f\x5d\x4e\xfa\xb0\x7c\x87\x9f\x2f\xf7\x9f\xe7\x90\xc0\x44\x0a\xec\x34\x5d\x01\x6e\x7c\xbe\xa8\xb5\x2c\x3b\xb5\x5a\x6d\x73\x94\x20\xd2\x6d\xd0\x04\xd4\x5f\x67\x55\xd6\x8f\xb5\x41\xf5\x22\x63\xfe\x8c\x28\x0c\x0f\x91\x60\x2e\x1d\x32\xac\x85\x5a\xa0\xf6\x34\x2f\x4c\x1a\xa4\x5a\x7a\xb4\xdc\xa1\xb7\xf3\xd2\x9f\x47\xcc\x5a\x3c\x4e\xd1\xc4\x5c\xec\x2d\x6c\x94\x1e\xb4\xf6\xb2\x30\x3d\x0a\x53\x5c\x34\xfd\xd0\x99\x8b\xc2\xb8\x91\x7c\xb5\x1f\x3f\x0e\xc6\xc5\x66\x5f\x68\x54\x07\x52\x8a\x23\x07\xf4\xbd\x83\xc7\x44\x1f\xc2\x5a\xa1\xf0\x62\x83\x06\x8b\xf8\xb0\xf9\x32\x19\x78\x48\x6e\x32\x74\x23\x08\x52\xa7\xf9\x4a\xb0\xd5\x5a\xf1\xa0\x3b\x9f\x39\x2e\x38\x2b\x1f\x2a\x6b\x36\x24\xea\xff\xb2\xa5\xfe\x9e\xcf\xa2\x27\xa4\x39\xa3\x9c\x1f\x5c\xf9\x40\xcc\xa8\x56\x83\xa3\xf9\xcb\xf3\x43\x95\xca\xc3\x3d\xab\x16\x2a\xb5\x5a\x76\x9c\x2e\x5e\xfa\xfc\x2d\xf1\xbc\x72\xc5\x7e\xcc\x76\x25\x0e\xd9\x10\x9c\x67\xfb\x26\xf0\xf0\x0b\xce\x4e\xc5\xa9\x67\x48\x7e\x40\xd7\xc4\x52\xcf\xa1\x71\xa8\x05\xb2\x41\x2a\xcf\xb6\xbd\x7f\x99\xdb\x19\x0c\xf8\x32\x60\x52\xab\xfb\x0e\x3c\x73\x93\x19\xbc\x25\xd0\x9a\xb3\xcb\xf0\x7d\x4c\xa8\xc3\x2b\xa1\x46\x51\x0d\x6a\x67\x5b\x7b\xaf\x9e\xda\x87\x71\x80\x2d\x72\x7a\xee\xf5\x2e\x9f\x8d\xdb\xe4\x93\xb5\xe9\xbf\x13\xba\xf4\x1b\x7a\xa5\x27\xfc\x35\xa6\xca\xe1\x90\x3d\xb1\x8a\xd6\x81\x52\xcd\x02\xdd\xdd\x53\x88\xa5\x7a\x53\xd6\xf4\x5b\xae\x2d\xe6\x17\x8d\xa3\x4b\x89\x0c\x41\xf7\xcb\xa7\x07\xb6\xf7\x5f\x32\x45\x0a\x8e\x20\xa3\x2f\x36\xbd\x1c\xa6\x65\x5c\x0e\x3a\x75\xf1\x5b\x8c\x16\x02\x70\xaf\xb1\x9e\x5b\x49\x17\x85\xf5\x94\x15\xae\x70\x44\xc7\x95\x26\xf1\x0b\x37\xd4\x31\x7c\xff\xcc\x2f\x49\x35\xce\x26\x9a\xd6\xc1\x49\x85\xf3\xfa\xc3\x13\x1c\x19\xd4\x1c\xa5\x36\x43\xd4\xcf\xce\x7c\xa4\xf1\x89\x6b\x58\xa3\x7f\x55\xbf\x54\x36\xb4\x7a\x71\xbc\x75\x5c\x17\xb8\x3a\xdd\x80\x9b\xee\x75\x29\xb1\x7d\x49\x18\x7d\x08\x29\x91\x5b\x72\x50\xad\x71\x19\xde\xe0\x31\x14\x18\xc2\xdf\xfd\xb6\x8e\x2f\x68\xab\xb5\x6d\xf9\x05\x3f\xda\x46\x46\x99\x55\x66\xef\x5b\x0c\x44\x2b\xf3\xe2\x78\x97\xd6\xf7\xdd\x9b\xba\x24\x7e\x97\x8f\x3d\xa7\xfc\xe4\xd4\x39\xde\x53\x98\x37\x00\x9b\x9d\x50\x0e\x0f\xaa\x34\xd6\x79\xbf\x26\x1f\x9a\x6e\x71\xa8\x5b\x66\x2a\xeb\x77\xc3\xff\xf2\x4d\xa4\xd3\x5f\x28\x99\x76\xb2\xe6\xea\xa4\x3a\x7e\x4b\x33\xc6\x64\x7c\xf7\x3b\x8c\xf9\x88\xec\xad\x04\xdc\x9e\x23\x83\xab\x9e\x06\xa0\x93\x05\xc3\x5a\x15\xbb\x63\x8b\x35\xe1\x71\xf7\xc2\x96\x36\x8a\x02\xb1\x17\x20\x8b\xab\x2c\x98\x65\x66\xc0\xeb\xab\xf5\x1a\xf0\x38\xbd\x87\x0d\x8a\x73\xca\x37\x2e\x5c\x1a\x3c\x59\xf6\x54\xd5\x3b\x0a\x78\xb0\x9c\x17\x60\x8b\x49\x66\x03\x6a\x67\x16\x56\x1e\x1f\x68\xfa\x8c\x6e\x5c\x99\x6d\x84\xa0\x3e\xfc\x2b\xce\x36\xf4\x7b\xd5\x66\x95\xb4\x0c\xa6\x74\xad\xce\xf9\xe6\x50\x94\x8f\xef\xc6\x1f\x97\x86\xdc\x5f\xa9\x58\xa8\xa0\x24\x7b\x6e\xbf\x69\xd6\xd9\xa8\x3e\x0e\x64\x25\xe2\x43\x4f\x6e\xb2\x5a\x47\x7f\xd1\xc9\x95\xb1\xb4\x6a\x69\x3f\x50\xc7\x49\x69\xf5\x6a\x2c\x3e\x37\x78\x7d\xc1\xf2\xab\x40\xd7\xe5\x2b\x7a\x36\x1d\x18\x50\xff\xfa\x2a\x63\xed\x23\x3f\x72\x20\xd0\x31\xf9\x91\x3e\x9c\x26\x38\x5b\xe5\xe9\xf5\xe9\xbc\x01\xad\x50\x78\xe2\xe9\x04\x43\xf8\x17\xb0\x98\x1f\x0d\x45\x9e\x5f\x67\x7a\xec\x0c\x6d\xf3\x15\xf7\xed\xf3\xe5\xd7\xdd\x52\x09\x6a\x77\x03\x62\xde\x91\xba\xa8\x57\x20\xf7\x0c\xb5\x19\x4f\x7c\x0a\x7f\x85\x46\x48\x88\xa6\xbc\x9c\xc3\x77\x2a\x3f\xd7\x8e\xaa\x8a\x75\x2e\x3e\x54\x6c\xd4\x06\x7d\xe0\xcb\xfb\xa5\xd2\x8f\xc5\x7b\x6c\x3a\x67\x7d\xac\x5a\x6f\xa1\x85\x27\xa2\xb3\xe6\xc7\xe5\xa7\xb3\x51\x89\x5a\xd9\x67\xb4\x38\x9d\xb0\xb8\xaf\x4e\x1a\x8e\x1b\xe9\x83\x77\xf2\x51\x48\x72\xbd\xff\x88\x0b\x02\xe8\x30\xfd\xa5\x2d\x01\x28\x16\x3f\xbf\xef\x8f\x30\xfc\x31\xc8\x35\xf6\xdb\xa6\xdf\x65\x03\xdd\xf8\x5e\x78\xec\x4c\x4f\xcd\x53\xf4\x8e\xe8\x33\xdf\xbb\x3c\xee\xd5\xd4\xc5\x4c\x05\x86\x74\xc0\x05\xbd\x91\x9f\xb0\xef\x4b\xcc\xc9\x62\xb7\xad\xcc\xcd\x7e\x72\x89\x4a\x5a\x44\xc2\x49\xd8\xb7\x19\x69\xc5\xb4\xda\x3d\x1d\xde\x3a\xab\x05\x5b\x8c\x63\xb1\x71\x10\x33\xd6\x0b\xbe\xfc\x9b\x5c\x2d\xbf\xa1\x0b\xb2\x1c\x81\x1a\xc1\xbe\x3f\x6e\xa0\xc7\xd1\x35\x35\xcf\xfd\x33\x37\xdc\xdc\xdd\x79\xe4\x8f\xfc\x4a\x41\x13\x59\x20\x77\xd8\x84\x09\x1c\xaf\x4f\xe1\x3e\xcf\x31\x5d\x5f\x74\x1c\x0c\xe5\x0c\xee\x98\x61\x03\x1d\x2a\x8b\xd7\x32\x33\x11\x4f\x12\xb2\xc8\x55\x88\x8f\x9b\x59\x31\x77\x2f\xbd\xdb\xad\xd5\xec\x95\xd2\x54\x76\x54\x48\xfe\xe3\x49\x4d\x96\x0f\x14\x11\x7d\x48\xac\xd0\x48\xd8\x3b\x4c\x9b\xd8\x75\xde\x37\x56\x2a\x4f\xb7\xdc\xae\x36\x8e\x52\x2a\xb6\xfd\xcb\x55\x4e\x65\x2a\xcb\x54\x59\x39\x49\x02\x68\xa0\x7d\xe7\x33\x54\x96\x27\xda\x32\x12\x9e\xba\x57\x57\xc7\x7d\x8f\x32\x49\xd5\x2b\xd7\xcf\x43\x55\xad\x4b\xef\x45\x9c\x2c\xa8\x9e\xf1\x1b\x95\xcf\x45\xda\x37\xf0\x32\x5f\x4f\x8f\x6d\x8f\xb6\x14\xdf\x46\x4c\xfe\xb9\x54\xd9\x4e\xee\x8c\x18\xd2\x80\x39\xfc\x63\xe7\xfe\x3b\x51\xf8\xe7\x26\x06\x13\xd7\xbf\x41\xe7\x09\x71\x05\xeb\x45\xca\x89\xff\xbb\xe1\x3b\x31\x3f\x64\xe5\xcc\xa2\xa0\x21\xd7\xac\xc2\xc1\x6b\x11\xc4\xd9\x91\x49\x7d\x40\x01\xe2\xff\x3b\x00\x00\xff\xff\x08\xfc\x80\x11\x83\x0b\x00\x00")

func web_ui_logo_png_bytes() ([]byte, error) {
	return bindata_read(
		_web_ui_logo_png,
		"web-ui/logo.png",
	)
}

func web_ui_logo_png() (*asset, error) {
	bytes, err := web_ui_logo_png_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "web-ui/logo.png", size: 2947, mode: os.FileMode(420), modTime: time.Unix(1422231681, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"web-ui/index.html": web_ui_index_html,
	"web-ui/logo.png":   web_ui_logo_png,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"web-ui": &_bintree_t{nil, map[string]*_bintree_t{
		"index.html": &_bintree_t{web_ui_index_html, map[string]*_bintree_t{}},
		"logo.png":   &_bintree_t{web_ui_logo_png, map[string]*_bintree_t{}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
